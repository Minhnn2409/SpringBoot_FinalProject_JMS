package com.trungtamjava.SpringProject.service.impl;

import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.trungtamjava.SpringProject.dao.ProductDao;
import com.trungtamjava.SpringProject.entity.Category;
import com.trungtamjava.SpringProject.entity.Product;
import com.trungtamjava.SpringProject.model.CategoryDTO;
import com.trungtamjava.SpringProject.model.ProductDTO;
import com.trungtamjava.SpringProject.service.ProductService;

@Service
@Transactional
public class ProductServiceImpl implements ProductService {
	@Autowired
	private ProductDao productDao;

	@Override
	public void add(ProductDTO product) {
		productDao.add(convertToEntity(product));
	}

	@Override
	public void update(ProductDTO product) {
		// TODO Auto-generated method stub

	}

	@Override
	public void delete(int id) {
		// TODO Auto-generated method stub

	}

	@Override
	public List<ProductDTO> getAllProducts() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ProductDTO getProductById(int id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<ProductDTO> getProductByName(String name) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<ProductDTO> getByCategory(int categoryId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<ProductDTO> getLimitProduct(int numProduct) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int count(String name) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public List<ProductDTO> search(String name, int maxPage, int offset) {
		// TODO Auto-generated method stub
		return null;
	}

	private Product convertToEntity(ProductDTO productDTO) {
		Product product = new Product();
		product.setId(productDTO.getId());
		product.setName(productDTO.getName());
		product.setPrice(productDTO.getPrice());
		product.setDescription(productDTO.getDescription());
		product.setImage(productDTO.getImage());
		product.setCategory(convertCategoryToEntity(productDTO.getCategory()));
		return product;
	}

	private ProductDTO convertToDTO(Product product) {
		ProductDTO productDTO = new ProductDTO();
		productDTO.setId(product.getId());
		productDTO.setName(product.getName());
		productDTO.setPrice(product.getPrice());
		productDTO.setDescription(product.getDescription());
		productDTO.setImage(product.getImage());
		productDTO.setCategory(convertCategoryToDTO(product.getCategory()));
		return productDTO;
	}

	private Category convertCategoryToEntity(CategoryDTO categoryDTO) {
		Category category = new Category();
		category.setId(categoryDTO.getId());
		category.setName(categoryDTO.getName());
		return category;
	}

	private CategoryDTO convertCategoryToDTO(Category category) {
		CategoryDTO categoryDTO = new CategoryDTO();
		category.setId(category.getId());
		category.setName(category.getName());
		return categoryDTO;
	}
}
